{"version":3,"file":"bundle.esm.js","sources":["../node_modules/rollup-plugin-node-polyfills/polyfills/events.js","../src/value.ts","../src/proxy.ts","../src/component.ts","../src/vnode.ts","../src/application.ts","../index.ts"],"sourcesContent":["'use strict';\n\nvar domain;\n\n// This constructor is used to store event handlers. Instantiating this is\n// faster than explicitly calling `Object.create(null)` to get a \"clean\" empty\n// object (tested with v8 v4.9).\nfunction EventHandlers() {}\nEventHandlers.prototype = Object.create(null);\n\nfunction EventEmitter() {\n  EventEmitter.init.call(this);\n}\nexport default EventEmitter;\nexport {EventEmitter};\n\n// nodejs oddity\n// require('events') === require('events').EventEmitter\nEventEmitter.EventEmitter = EventEmitter\n\nEventEmitter.usingDomains = false;\n\nEventEmitter.prototype.domain = undefined;\nEventEmitter.prototype._events = undefined;\nEventEmitter.prototype._maxListeners = undefined;\n\n// By default EventEmitters will print a warning if more than 10 listeners are\n// added to it. This is a useful default which helps finding memory leaks.\nEventEmitter.defaultMaxListeners = 10;\n\nEventEmitter.init = function() {\n  this.domain = null;\n  if (EventEmitter.usingDomains) {\n    // if there is an active domain, then attach to it.\n    if (domain.active && !(this instanceof domain.Domain)) {\n      this.domain = domain.active;\n    }\n  }\n\n  if (!this._events || this._events === Object.getPrototypeOf(this)._events) {\n    this._events = new EventHandlers();\n    this._eventsCount = 0;\n  }\n\n  this._maxListeners = this._maxListeners || undefined;\n};\n\n// Obviously not all Emitters should be limited to 10. This function allows\n// that to be increased. Set to zero for unlimited.\nEventEmitter.prototype.setMaxListeners = function setMaxListeners(n) {\n  if (typeof n !== 'number' || n < 0 || isNaN(n))\n    throw new TypeError('\"n\" argument must be a positive number');\n  this._maxListeners = n;\n  return this;\n};\n\nfunction $getMaxListeners(that) {\n  if (that._maxListeners === undefined)\n    return EventEmitter.defaultMaxListeners;\n  return that._maxListeners;\n}\n\nEventEmitter.prototype.getMaxListeners = function getMaxListeners() {\n  return $getMaxListeners(this);\n};\n\n// These standalone emit* functions are used to optimize calling of event\n// handlers for fast cases because emit() itself often has a variable number of\n// arguments and can be deoptimized because of that. These functions always have\n// the same number of arguments and thus do not get deoptimized, so the code\n// inside them can execute faster.\nfunction emitNone(handler, isFn, self) {\n  if (isFn)\n    handler.call(self);\n  else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n    for (var i = 0; i < len; ++i)\n      listeners[i].call(self);\n  }\n}\nfunction emitOne(handler, isFn, self, arg1) {\n  if (isFn)\n    handler.call(self, arg1);\n  else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n    for (var i = 0; i < len; ++i)\n      listeners[i].call(self, arg1);\n  }\n}\nfunction emitTwo(handler, isFn, self, arg1, arg2) {\n  if (isFn)\n    handler.call(self, arg1, arg2);\n  else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n    for (var i = 0; i < len; ++i)\n      listeners[i].call(self, arg1, arg2);\n  }\n}\nfunction emitThree(handler, isFn, self, arg1, arg2, arg3) {\n  if (isFn)\n    handler.call(self, arg1, arg2, arg3);\n  else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n    for (var i = 0; i < len; ++i)\n      listeners[i].call(self, arg1, arg2, arg3);\n  }\n}\n\nfunction emitMany(handler, isFn, self, args) {\n  if (isFn)\n    handler.apply(self, args);\n  else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n    for (var i = 0; i < len; ++i)\n      listeners[i].apply(self, args);\n  }\n}\n\nEventEmitter.prototype.emit = function emit(type) {\n  var er, handler, len, args, i, events, domain;\n  var needDomainExit = false;\n  var doError = (type === 'error');\n\n  events = this._events;\n  if (events)\n    doError = (doError && events.error == null);\n  else if (!doError)\n    return false;\n\n  domain = this.domain;\n\n  // If there is no 'error' event listener then throw.\n  if (doError) {\n    er = arguments[1];\n    if (domain) {\n      if (!er)\n        er = new Error('Uncaught, unspecified \"error\" event');\n      er.domainEmitter = this;\n      er.domain = domain;\n      er.domainThrown = false;\n      domain.emit('error', er);\n    } else if (er instanceof Error) {\n      throw er; // Unhandled 'error' event\n    } else {\n      // At least give some kind of context to the user\n      var err = new Error('Uncaught, unspecified \"error\" event. (' + er + ')');\n      err.context = er;\n      throw err;\n    }\n    return false;\n  }\n\n  handler = events[type];\n\n  if (!handler)\n    return false;\n\n  var isFn = typeof handler === 'function';\n  len = arguments.length;\n  switch (len) {\n    // fast cases\n    case 1:\n      emitNone(handler, isFn, this);\n      break;\n    case 2:\n      emitOne(handler, isFn, this, arguments[1]);\n      break;\n    case 3:\n      emitTwo(handler, isFn, this, arguments[1], arguments[2]);\n      break;\n    case 4:\n      emitThree(handler, isFn, this, arguments[1], arguments[2], arguments[3]);\n      break;\n    // slower\n    default:\n      args = new Array(len - 1);\n      for (i = 1; i < len; i++)\n        args[i - 1] = arguments[i];\n      emitMany(handler, isFn, this, args);\n  }\n\n  if (needDomainExit)\n    domain.exit();\n\n  return true;\n};\n\nfunction _addListener(target, type, listener, prepend) {\n  var m;\n  var events;\n  var existing;\n\n  if (typeof listener !== 'function')\n    throw new TypeError('\"listener\" argument must be a function');\n\n  events = target._events;\n  if (!events) {\n    events = target._events = new EventHandlers();\n    target._eventsCount = 0;\n  } else {\n    // To avoid recursion in the case that type === \"newListener\"! Before\n    // adding it to the listeners, first emit \"newListener\".\n    if (events.newListener) {\n      target.emit('newListener', type,\n                  listener.listener ? listener.listener : listener);\n\n      // Re-assign `events` because a newListener handler could have caused the\n      // this._events to be assigned to a new object\n      events = target._events;\n    }\n    existing = events[type];\n  }\n\n  if (!existing) {\n    // Optimize the case of one listener. Don't need the extra array object.\n    existing = events[type] = listener;\n    ++target._eventsCount;\n  } else {\n    if (typeof existing === 'function') {\n      // Adding the second element, need to change to array.\n      existing = events[type] = prepend ? [listener, existing] :\n                                          [existing, listener];\n    } else {\n      // If we've already got an array, just append.\n      if (prepend) {\n        existing.unshift(listener);\n      } else {\n        existing.push(listener);\n      }\n    }\n\n    // Check for listener leak\n    if (!existing.warned) {\n      m = $getMaxListeners(target);\n      if (m && m > 0 && existing.length > m) {\n        existing.warned = true;\n        var w = new Error('Possible EventEmitter memory leak detected. ' +\n                            existing.length + ' ' + type + ' listeners added. ' +\n                            'Use emitter.setMaxListeners() to increase limit');\n        w.name = 'MaxListenersExceededWarning';\n        w.emitter = target;\n        w.type = type;\n        w.count = existing.length;\n        emitWarning(w);\n      }\n    }\n  }\n\n  return target;\n}\nfunction emitWarning(e) {\n  typeof console.warn === 'function' ? console.warn(e) : console.log(e);\n}\nEventEmitter.prototype.addListener = function addListener(type, listener) {\n  return _addListener(this, type, listener, false);\n};\n\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\n\nEventEmitter.prototype.prependListener =\n    function prependListener(type, listener) {\n      return _addListener(this, type, listener, true);\n    };\n\nfunction _onceWrap(target, type, listener) {\n  var fired = false;\n  function g() {\n    target.removeListener(type, g);\n    if (!fired) {\n      fired = true;\n      listener.apply(target, arguments);\n    }\n  }\n  g.listener = listener;\n  return g;\n}\n\nEventEmitter.prototype.once = function once(type, listener) {\n  if (typeof listener !== 'function')\n    throw new TypeError('\"listener\" argument must be a function');\n  this.on(type, _onceWrap(this, type, listener));\n  return this;\n};\n\nEventEmitter.prototype.prependOnceListener =\n    function prependOnceListener(type, listener) {\n      if (typeof listener !== 'function')\n        throw new TypeError('\"listener\" argument must be a function');\n      this.prependListener(type, _onceWrap(this, type, listener));\n      return this;\n    };\n\n// emits a 'removeListener' event iff the listener was removed\nEventEmitter.prototype.removeListener =\n    function removeListener(type, listener) {\n      var list, events, position, i, originalListener;\n\n      if (typeof listener !== 'function')\n        throw new TypeError('\"listener\" argument must be a function');\n\n      events = this._events;\n      if (!events)\n        return this;\n\n      list = events[type];\n      if (!list)\n        return this;\n\n      if (list === listener || (list.listener && list.listener === listener)) {\n        if (--this._eventsCount === 0)\n          this._events = new EventHandlers();\n        else {\n          delete events[type];\n          if (events.removeListener)\n            this.emit('removeListener', type, list.listener || listener);\n        }\n      } else if (typeof list !== 'function') {\n        position = -1;\n\n        for (i = list.length; i-- > 0;) {\n          if (list[i] === listener ||\n              (list[i].listener && list[i].listener === listener)) {\n            originalListener = list[i].listener;\n            position = i;\n            break;\n          }\n        }\n\n        if (position < 0)\n          return this;\n\n        if (list.length === 1) {\n          list[0] = undefined;\n          if (--this._eventsCount === 0) {\n            this._events = new EventHandlers();\n            return this;\n          } else {\n            delete events[type];\n          }\n        } else {\n          spliceOne(list, position);\n        }\n\n        if (events.removeListener)\n          this.emit('removeListener', type, originalListener || listener);\n      }\n\n      return this;\n    };\n\nEventEmitter.prototype.removeAllListeners =\n    function removeAllListeners(type) {\n      var listeners, events;\n\n      events = this._events;\n      if (!events)\n        return this;\n\n      // not listening for removeListener, no need to emit\n      if (!events.removeListener) {\n        if (arguments.length === 0) {\n          this._events = new EventHandlers();\n          this._eventsCount = 0;\n        } else if (events[type]) {\n          if (--this._eventsCount === 0)\n            this._events = new EventHandlers();\n          else\n            delete events[type];\n        }\n        return this;\n      }\n\n      // emit removeListener for all listeners on all events\n      if (arguments.length === 0) {\n        var keys = Object.keys(events);\n        for (var i = 0, key; i < keys.length; ++i) {\n          key = keys[i];\n          if (key === 'removeListener') continue;\n          this.removeAllListeners(key);\n        }\n        this.removeAllListeners('removeListener');\n        this._events = new EventHandlers();\n        this._eventsCount = 0;\n        return this;\n      }\n\n      listeners = events[type];\n\n      if (typeof listeners === 'function') {\n        this.removeListener(type, listeners);\n      } else if (listeners) {\n        // LIFO order\n        do {\n          this.removeListener(type, listeners[listeners.length - 1]);\n        } while (listeners[0]);\n      }\n\n      return this;\n    };\n\nEventEmitter.prototype.listeners = function listeners(type) {\n  var evlistener;\n  var ret;\n  var events = this._events;\n\n  if (!events)\n    ret = [];\n  else {\n    evlistener = events[type];\n    if (!evlistener)\n      ret = [];\n    else if (typeof evlistener === 'function')\n      ret = [evlistener.listener || evlistener];\n    else\n      ret = unwrapListeners(evlistener);\n  }\n\n  return ret;\n};\n\nEventEmitter.listenerCount = function(emitter, type) {\n  if (typeof emitter.listenerCount === 'function') {\n    return emitter.listenerCount(type);\n  } else {\n    return listenerCount.call(emitter, type);\n  }\n};\n\nEventEmitter.prototype.listenerCount = listenerCount;\nfunction listenerCount(type) {\n  var events = this._events;\n\n  if (events) {\n    var evlistener = events[type];\n\n    if (typeof evlistener === 'function') {\n      return 1;\n    } else if (evlistener) {\n      return evlistener.length;\n    }\n  }\n\n  return 0;\n}\n\nEventEmitter.prototype.eventNames = function eventNames() {\n  return this._eventsCount > 0 ? Reflect.ownKeys(this._events) : [];\n};\n\n// About 1.5x faster than the two-arg version of Array#splice().\nfunction spliceOne(list, index) {\n  for (var i = index, k = i + 1, n = list.length; k < n; i += 1, k += 1)\n    list[i] = list[k];\n  list.pop();\n}\n\nfunction arrayClone(arr, i) {\n  var copy = new Array(i);\n  while (i--)\n    copy[i] = arr[i];\n  return copy;\n}\n\nfunction unwrapListeners(arr) {\n  var ret = new Array(arr.length);\n  for (var i = 0; i < ret.length; ++i) {\n    ret[i] = arr[i].listener || arr[i];\n  }\n  return ret;\n}\n","import { EventEmitter } from \"events\"\r\nimport { DataProxy } from \"./proxy\"\r\n\r\nexport class PropValue extends EventEmitter {\r\n  public value: any\r\n  private dep: Array<Watcher>\r\n  // 该值所属数据响应中心\r\n  dataProxy?: DataProxy\r\n\r\n  constructor(value: any, dataProxy?: DataProxy) {\r\n    super()\r\n    this.value = value\r\n    this.dep = []\r\n    this.dataProxy = dataProxy\r\n  }\r\n\r\n  setDep(watcher: Watcher) {\r\n    this.dep.push(watcher)\r\n  }\r\n\r\n  valueOf() {\r\n    return this.value\r\n  }\r\n\r\n  toString() {\r\n    return this.value\r\n  }\r\n\r\n  set(value: any) {\r\n    this.value = value\r\n  }\r\n\r\n  get(): any {\r\n    return this.value\r\n  }\r\n\r\n  notify() {\r\n    this.dep.forEach(watcher => {\r\n      watcher.update()\r\n    })\r\n    this.emit('change', this.value)\r\n  }\r\n\r\n}\r\n\r\n\r\n\r\nexport class Watcher {\r\n  fn: () => void\r\n\r\n  constructor(fn: () => void) {\r\n    this.fn = fn\r\n  }\r\n\r\n  update() {\r\n    this.fn()\r\n  }\r\n}","import { EventEmitter } from \"events\";\r\nimport { Vact } from \"./application\";\r\nimport { PropValue } from \"./value\";\r\n\r\n/**\r\n * 数据响应式中心\r\n*/\r\n\r\n/**\r\n * 数据存放处\r\n*/\r\n\r\nexport class DataProxyValue {\r\n  private valueMap: WeakMap<{}, any>\r\n  constructor() {\r\n    this.valueMap = new WeakMap()\r\n  }\r\n\r\n  getProp(target: Record<any, any>, prop: any): PropValue {\r\n    if (!this.valueMap.get(target)) {\r\n      this.valueMap.set(target, {})\r\n    }\r\n\r\n    let valueTarget = this.valueMap.get(target)\r\n\r\n    if (!valueTarget[prop]) {\r\n\r\n      let propValue = new PropValue(Array.isArray(target[prop]) ? new Proxy(target[prop], {\r\n        set(target, prop, value, receiver) {\r\n          // 这里一定要先设置再通知\r\n          let res = Reflect.set(target, prop, value, receiver)\r\n          propValue.notify()\r\n          return res\r\n        }\r\n      }) : target[prop])\r\n      valueTarget[prop] = propValue\r\n    }\r\n    return valueTarget[prop]\r\n  }\r\n  // 获取用于绑定属性事件的代理对象\r\n  getValueTarget(target: Record<any, any>): Record<any, any> {\r\n    return this.valueMap.get(target)\r\n  }\r\n\r\n  // 设置用于绑定属性事件的代理对象\r\n  setValueTarget(target: Record<any, any>, valueTarget: Record<any, any>) {\r\n    this.valueMap.set(target, valueTarget)\r\n  }\r\n\r\n}\r\n\r\n/**\r\n * 监控数据响应变化处\r\n*/\r\n\r\nexport class DataProxy {\r\n  data: object\r\n  dataProxyValue: DataProxyValue\r\n\r\n  constructor(data: object) {\r\n    this.dataProxyValue = new DataProxyValue()\r\n    // 监控普通对象\r\n    const handler: ProxyHandler<any> = {\r\n      get: (target, prop, receiver) => {\r\n        if (Array.isArray(target)) {\r\n          return Reflect.get(target, prop)\r\n        } else if (typeof target[prop] === 'object' && target[prop] !== null && !Array.isArray(target[prop])) {\r\n          return new Proxy(target[prop], handler)\r\n        } else if (typeof target[prop] === 'function') {\r\n          return Reflect.get(target, prop)\r\n        }\r\n        else {\r\n          let res = this.dataProxyValue.getProp(target, prop)\r\n          for (let depArr of Vact.depPool) {\r\n            if (!depArr.includes(res)) {\r\n              depArr.push(res)\r\n            }\r\n          }\r\n          return res\r\n        }\r\n      },\r\n      set: (target, prop, value, receiver) => {\r\n        if (typeof value === 'object' && value !== null && !Array.isArray(value)) {\r\n          // 当对象被替换为新对象时 通知对象里所有的响应式\r\n          let valueTarget = this.dataProxyValue.getValueTarget(target[prop])\r\n          this.replaceProps(value, valueTarget)\r\n          return Reflect.set(target, prop, value, receiver)\r\n        } else {\r\n          let propValue = this.dataProxyValue.getProp(target, prop)\r\n          propValue.value = value\r\n          propValue.notify()\r\n          return Reflect.set(target, prop, value, receiver)\r\n        }\r\n\r\n\r\n      }\r\n\r\n    }\r\n    this.data = new Proxy(data, handler)\r\n\r\n\r\n  }\r\n\r\n\r\n  getData() {\r\n    return this.data\r\n  }\r\n\r\n  // 当对象属性被新对象替换时\r\n  replaceProps(target: Record<any, any>, valueTarget: Record<any, any>) {\r\n    for (let prop in valueTarget) {\r\n      let propValue = valueTarget[prop]\r\n      propValue.value = target[prop]\r\n      propValue.notify()\r\n    }\r\n    this.dataProxyValue.setValueTarget(target, valueTarget)\r\n  }\r\n\r\n}\r\n\r\n/**\r\n * 用于实现对数组监控，只适合定长的数组\r\n*/\r\nexport class ArrayProxy {\r\n  data: any[]\r\n  dataProxyValue: DataProxyValue\r\n\r\n  constructor(data: any[]) {\r\n    this.dataProxyValue = new DataProxyValue()\r\n    // 监控数组对象\r\n    const handler: ProxyHandler<any> = {\r\n      get: (target, prop, receiver) => {\r\n        if (typeof target[prop] === 'object' && target[prop] !== null && !Array.isArray(target[prop])) {\r\n          return new Proxy(target[prop], handler)\r\n        } else if (typeof target[prop] === 'function') {\r\n          return Reflect.get(target, prop, receiver)\r\n        }\r\n        else {\r\n          let propValue = this.dataProxyValue.getProp(target, prop)\r\n          for (let depArr of Vact.depPool) {\r\n            if (!depArr.includes(propValue)) {\r\n              depArr.push(propValue)\r\n            }\r\n          }\r\n          return propValue.value\r\n        }\r\n      },\r\n      set: (target, prop, value, receiver) => {\r\n        if (typeof value === 'object' && value !== null && !Array.isArray(value)) {\r\n          // 当对象被替换为新对象时 通知对象里所有的响应式\r\n          let valueTarget = this.dataProxyValue.getValueTarget(target[prop])\r\n          let res = Reflect.set(target, prop, value, receiver)\r\n          this.replaceProps(value, valueTarget)\r\n          return res\r\n        } else {\r\n          let propValue = this.dataProxyValue.getProp(target, prop)\r\n\r\n          propValue.value = Array.isArray(value) ? new Proxy(value, {\r\n            set(target, prop, value, receiver) {\r\n              // 这里一定要先设置再通知\r\n              let res = Reflect.set(target, prop, value, receiver)\r\n              propValue.notify()\r\n              return res\r\n            }\r\n          }) : value\r\n\r\n\r\n          let res = Reflect.set(target, prop, value, receiver)\r\n          propValue.notify()\r\n          return res\r\n        }\r\n\r\n\r\n      }\r\n\r\n\r\n\r\n    }\r\n    this.data = new Proxy(data, handler)\r\n\r\n  }\r\n\r\n  // 当对象属性被新对象替换时\r\n  replaceProps(target: Record<any, any>, valueTarget: Record<any, any>) {\r\n    for (let prop in valueTarget) {\r\n      let propValue = valueTarget[prop]\r\n      propValue.value = target[prop]\r\n      propValue.notify()\r\n    }\r\n    this.dataProxyValue.setValueTarget(target, valueTarget)\r\n  }\r\n\r\n  getData() {\r\n    return this.data\r\n  }\r\n\r\n\r\n\r\n}\r\n\r\n\r\nexport class DataProxyTest {\r\n  data: object\r\n  dataProxyValue: DataProxyValue\r\n\r\n  constructor(data: object) {\r\n    this.dataProxyValue = new DataProxyValue()\r\n    // 监控普通对象\r\n    const handler: ProxyHandler<any> = {\r\n      get: (target, prop, receiver) => {\r\n\r\n        if (typeof target[prop] === 'object' && target[prop] !== null && !Array.isArray(target[prop])) {\r\n          return new Proxy(target[prop], handler)\r\n        } else if (typeof target[prop] === 'function') {\r\n          return Reflect.get(target, prop, receiver)\r\n        }\r\n        else {\r\n          let propValue = this.dataProxyValue.getProp(target, prop)\r\n          for (let depArr of Vact.depPool) {\r\n            if (!depArr.includes(propValue)) {\r\n              depArr.push(propValue)\r\n            }\r\n          }\r\n          return propValue.value\r\n        }\r\n      },\r\n      set: (target, prop, value, receiver) => {\r\n        if (typeof value === 'object' && value !== null && !Array.isArray(value)) {\r\n          // 当对象被替换为新对象时 通知对象里所有的响应式\r\n          let valueTarget = this.dataProxyValue.getValueTarget(target[prop])\r\n          let res = Reflect.set(target, prop, value, receiver)\r\n          this.replaceProps(value, valueTarget)\r\n          return res\r\n        } else {\r\n          let propValue = this.dataProxyValue.getProp(target, prop)\r\n\r\n          propValue.value = Array.isArray(value) ? new Proxy(value, {\r\n            set(target, prop, value, receiver) {\r\n              // 这里一定要先设置再通知\r\n              let res = Reflect.set(target, prop, value, receiver)\r\n              propValue.notify()\r\n              return res\r\n            }\r\n          }) : value\r\n\r\n\r\n          let res = Reflect.set(target, prop, value, receiver)\r\n          propValue.notify()\r\n          return res\r\n        }\r\n\r\n\r\n      }\r\n\r\n    }\r\n    this.data = new Proxy(data, handler)\r\n\r\n\r\n  }\r\n\r\n\r\n  getData() {\r\n    return this.data\r\n  }\r\n\r\n  // 当对象属性被新对象替换时\r\n  replaceProps(target: Record<any, any>, valueTarget: Record<any, any>) {\r\n    for (let prop in valueTarget) {\r\n      let propValue = valueTarget[prop]\r\n      propValue.value = target[prop]\r\n      propValue.notify()\r\n    }\r\n    this.dataProxyValue.setValueTarget(target, valueTarget)\r\n  }\r\n\r\n}\r\n\r\n","import { SubConstructor, Vact } from \"./application\";\r\nimport { createNode } from './application'\r\nimport { ComponentVNode, ElementVNode, TextVNode } from \"./vnode\";\r\nimport { DataProxy, DataProxyTest } from './proxy'\r\n\r\n/**\r\n * 根组件\r\n*/\r\n\r\ninterface Config {\r\n  data?: {\r\n    [key: string | symbol]: any\r\n  },\r\n}\r\n\r\nabstract class Component {\r\n  config: Config\r\n  abstract data: {}\r\n  abstract props?: {}\r\n  abstract children?: any[]\r\n\r\n  constructor(config: Config = {}) {\r\n    this.config = config\r\n    // 设置响应式数据对象\r\n    this.setData()\r\n  }\r\n\r\n  // 设置数据为响应式的\r\n  setData() {\r\n    this.data = new DataProxyTest(this.config.data || {}).getData()\r\n  }\r\n\r\n  setProps(props: {}) {\r\n    this.props = props\r\n  }\r\n\r\n  setChildren(children: any[]) {\r\n    this.children = children\r\n  }\r\n\r\n  abstract render(h: (a: string | SubConstructor, b?: {}, c?: []) => ElementVNode | ComponentVNode): ElementVNode\r\n\r\n  renderRoot(): ElementVNode {\r\n    return this.render(createNode)\r\n  }\r\n}\r\n\r\nexport default Component","import { Vact } from \"./application\"\r\nimport Component from \"./component\"\r\nimport { Watcher, PropValue } from './value'\r\nimport { DataProxy, DataProxyTest, ArrayProxy } from './proxy'\r\n\r\n\r\n\r\nabstract class VNode {\r\n  abstract type: number\r\n  static ELEMENT: number = 0\r\n  static TEXT: number = 1\r\n  static COMPONENT: number = 2\r\n}\r\n\r\n\r\nexport class TextVNode extends VNode {\r\n  type: number = VNode.TEXT\r\n  text: string\r\n  textNode?: Text\r\n\r\n  constructor(text: string) {\r\n    super()\r\n    this.text = text\r\n  }\r\n\r\n  createTextNode() {\r\n    this.textNode = document.createTextNode(this.text)\r\n    return this.textNode\r\n  }\r\n}\r\n\r\nexport interface SubComponent {\r\n  new(props: {}, children: []): SubComponent\r\n  renderRoot(): ElementVNode\r\n  setProps(props: {}): void\r\n  setChildren(children: any[]): void\r\n}\r\n\r\n/**\r\n * 组件节点\r\n*/\r\n\r\nexport class ComponentVNode extends VNode {\r\n  type: number = VNode.COMPONENT\r\n  component?: SubComponent\r\n  Constructor: new (props: Record<any, any>, children: any[]) => SubComponent\r\n  props?: Record<any, any>\r\n  children?: any[]\r\n  constructor(Constructor: new (props: Record<any, any>, children: any[]) => SubComponent, props?: Record<any, any>, children?: any[]) {\r\n    super()\r\n    this.Constructor = Constructor\r\n    this.props = props || {}\r\n    this.children = children || []\r\n\r\n    // 在初始化内部一定不要调用init\r\n  }\r\n\r\n  init() {\r\n    // 处理自定义组件的属性\r\n    let props: Record<any, any> = new DataProxyTest({}).getData()\r\n    for (let prop in this.props) {\r\n      // 如果属性不为函数则不需要设置响应式\r\n      if (typeof this.props[prop] !== 'function') {\r\n        props[prop] = this.props[prop]\r\n        continue\r\n      }\r\n\r\n      let depProps: PropValue[] = []\r\n      let pool = Vact.depPool\r\n      pool.push(depProps)\r\n      let result = this.props[prop]()\r\n      pool.splice(pool.indexOf(depProps), 1)\r\n\r\n      if (typeof result === 'function') {\r\n        props[prop] = result\r\n      } else {\r\n        props[prop] = result\r\n        let fn = () => props[prop] = this.props![prop]()\r\n        depProps.forEach(item => {\r\n          item.setDep(new Watcher(fn))\r\n        })\r\n      }\r\n    }\r\n\r\n\r\n    let children = new ArrayProxy([]).getData()\r\n    if (this.children) {\r\n      for (let i = 0; i < this.children.length; i++) {\r\n        if (typeof this.children[i] !== 'function') {\r\n          children[i] = this.children[i]\r\n          continue\r\n        }\r\n\r\n\r\n        let depProps: PropValue[] = []\r\n        let pool = Vact.depPool\r\n        pool.push(depProps)\r\n        let result = this.children[i]()\r\n        pool.splice(pool.indexOf(depProps), 1)\r\n\r\n        if (typeof result === 'function') {\r\n          children[i] = result\r\n        } else {\r\n          children[i] = result\r\n          let fn = () => children[i] = this.children![i]()\r\n\r\n          depProps.forEach(item => {\r\n            item.setDep(new Watcher(fn))\r\n          })\r\n        }\r\n\r\n\r\n\r\n      }\r\n    }\r\n\r\n\r\n\r\n\r\n    let Constructor = this.Constructor\r\n    this.component = new Constructor(props, children)\r\n    this.component.setProps(props)\r\n    this.component.setChildren(children)\r\n  }\r\n\r\n  getComponent(): SubComponent {\r\n    this.init()\r\n    return this.component!\r\n  }\r\n\r\n\r\n}\r\n\r\ntype BaseElementVNodeChild = string | TextVNode | ElementVNode | Component | Array<any>\r\ntype ElementVNodeChild = BaseElementVNodeChild | (() => BaseElementVNodeChild)\r\nexport class ElementVNode extends VNode {\r\n  static nativeEvents: { [key: string]: any } = {\r\n    onClick: 'click',\r\n  }\r\n\r\n  tag: string\r\n  props?: {\r\n    [key: string]: any\r\n  }\r\n  children?: Array<ElementVNodeChild>\r\n  type: number = VNode.ELEMENT\r\n  ele?: HTMLElement\r\n\r\n  constructor(tag: string, props?: {}, children?: []) {\r\n    super()\r\n    this.tag = tag;\r\n    this.props = props;\r\n    this.children = children;\r\n  }\r\n\r\n  createEle() {\r\n    this.ele = document.createElement(this.tag)\r\n\r\n    // 处理标签属性\r\n    if (this.props) {\r\n      for (let prop in this.props) {\r\n        // 如果是函数要先看函数的返回值 不然直接设置属性\r\n        if (typeof this.props[prop] === 'function') {\r\n          let depProps: PropValue[] = []\r\n          let pool = Vact.depPool\r\n          pool.push(depProps)\r\n          let result = this.props[prop]()\r\n          pool.splice(pool.indexOf(depProps), 1)\r\n\r\n          if (typeof result === 'function') {\r\n            let pattern = /^on([a-zA-Z]+)/\r\n            if (pattern.test(prop)) {\r\n              let mat = prop.match(pattern)\r\n              mat && this.ele.addEventListener(mat[1].toLocaleLowerCase(), result.bind(this.ele))\r\n            } else {\r\n              this.ele.addEventListener(prop, result.bind(this.ele))\r\n            }\r\n          } else {\r\n            this.ele?.setAttribute(prop, result)\r\n            let fn = () => this.ele?.setAttribute(prop, this.props![prop]())\r\n            depProps.forEach(item => {\r\n              item.setDep(new Watcher(fn))\r\n            })\r\n          }\r\n        } else {\r\n          this.ele.setAttribute(prop, this.props[prop])\r\n        }\r\n\r\n      }\r\n    }\r\n\r\n    // 处理标签子节点\r\n    if (Array.isArray(this.children) && this.children.length) {\r\n      for (let child of this.children) this.addChild(child)\r\n    } else if (this.children !== undefined && this.children !== null) {\r\n      this.addChild(this.children)\r\n    }\r\n\r\n    return this.ele\r\n  }\r\n\r\n  // 通过虚拟节点获取所有真实节点\r\n  getRealNode(child: BaseElementVNodeChild): HTMLElement | Text {\r\n    let realNode: HTMLElement | Text = document.createTextNode('')\r\n    // 如果是普通的文本字符串\r\n    if (typeof child === \"string\") {\r\n      let vnode = new TextVNode(child)\r\n      realNode = vnode.createTextNode()\r\n    } else if (child instanceof Component) {\r\n      realNode = child.renderRoot().createEle()\r\n    } else if (child instanceof ComponentVNode) {\r\n      realNode = child.getComponent().renderRoot().createEle()\r\n      // 如果是元素节点\r\n    } else if (child instanceof ElementVNode) {\r\n      realNode = child.createEle()\r\n    } else if (child instanceof TextVNode) {\r\n      realNode = child.createTextNode()\r\n    } else {\r\n      let vnode = new TextVNode(String(child))\r\n      realNode = vnode.createTextNode()\r\n    }\r\n    return realNode\r\n  }\r\n\r\n  // 通过虚拟节点获取所有真实节点列表\r\n  getRealNodeList(childList: Array<BaseElementVNodeChild>): Array<HTMLElement | Text> {\r\n    let list: Array<HTMLElement | Text> = []\r\n    for (let i of childList) {\r\n      list.push(this.getRealNode(i))\r\n    }\r\n    return list\r\n  }\r\n\r\n  // 添加数组中所有的节点\r\n  addChildren(children: Array<HTMLElement | Text>, pivot: Text) {\r\n    let fragment = document.createDocumentFragment()\r\n    for (let i of children) {\r\n      fragment.appendChild(i)\r\n    }\r\n    this.ele?.insertBefore(fragment, pivot)\r\n  }\r\n  // 移除数组中所有的节点\r\n  removeChildren(children: Array<HTMLElement | Text>) {\r\n    for (let i of children) {\r\n      i.remove()\r\n    }\r\n  }\r\n\r\n  addChild(child: ElementVNodeChild): void {\r\n    if (!this.ele) return\r\n    // child可能是节点对象(元素节点 文本节点 组件节点), 也可能是函数(是函数说明是响应式)\r\n    // 除此之外还有可能是普通的文本字符串\r\n\r\n    // 如果是普通的文本字符串\r\n    if (typeof child === \"string\") {\r\n      let vnode = new TextVNode(child)\r\n      this.ele.appendChild(vnode.createTextNode())\r\n    }  // 如果子组件是自定义组件 这里可以删除\r\n    else if (child instanceof Component) {\r\n      this.ele.appendChild(child.renderRoot().createEle())\r\n    }\r\n    else if (child instanceof ComponentVNode) {\r\n      this.ele.appendChild(child.getComponent().renderRoot().createEle())\r\n    } // 如果是元素节点\r\n    else if (child instanceof ElementVNode) {\r\n      this.ele.appendChild(child.createEle())\r\n    }   // 如果是文本节点\r\n    else if (child instanceof TextVNode) {\r\n      this.ele.appendChild(child.createTextNode())\r\n    }   // 如果是函数\r\n    else if (typeof child === 'function') {\r\n\r\n      let depProps: PropValue[] = []\r\n      let pool = Vact.depPool\r\n      pool.push(depProps)\r\n      let result = child()\r\n      pool.splice(pool.indexOf(depProps), 1)\r\n      // 对于数组需要特殊处理\r\n\r\n      if (Array.isArray(result)) {\r\n        // 设置数组的锚点\r\n        let pivot = document.createTextNode('');\r\n        this.ele.appendChild(pivot)\r\n        let realNodeList = this.getRealNodeList(result)\r\n        this.addChildren(realNodeList, pivot)\r\n\r\n        // 没有依赖的属性直接结束\r\n        if (!depProps.length) return\r\n\r\n        let fn = () => {\r\n          this.removeChildren(realNodeList)\r\n          let newVnodeList = child()\r\n\r\n          if (Array.isArray(newVnodeList)) {\r\n            realNodeList = this.getRealNodeList(newVnodeList)\r\n            this.addChildren(realNodeList, pivot)\r\n          }\r\n        }\r\n\r\n        for (let prop of depProps) {\r\n          prop.setDep(new Watcher(fn))\r\n        }\r\n      } else {\r\n        let realNode = this.getRealNode(result)\r\n        this.ele.appendChild(realNode)\r\n        // 没有依赖的属性直接结束\r\n        if (!depProps.length) return\r\n\r\n        let fn = () => {\r\n          let newVNode = child()\r\n          let newRealNode = this.getRealNode(newVNode)\r\n          if (newRealNode) {\r\n            // 如果都是文本节点则不需要替换, 只需更改文本内容\r\n            if (newRealNode.nodeType === realNode.nodeType) {\r\n              realNode.nodeValue = newRealNode.nodeValue\r\n            } else {\r\n              this.ele?.replaceChild(newRealNode, realNode)\r\n              realNode = newRealNode\r\n            }\r\n          } else {\r\n            this.ele?.replaceChild(realNode = document.createTextNode(''), realNode)\r\n          }\r\n\r\n          // tode: 后续可以优化缓存节点，只需更改缓存节点的属性即可\r\n\r\n        }\r\n\r\n        for (let prop of depProps) {\r\n          prop.setDep(new Watcher(fn))\r\n        }\r\n      }\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n    // 如果是数组 直接递归遍历数组内的内容\r\n    else if (Array.isArray(child)) {\r\n      for (let subChild of child) {\r\n        this.addChild(subChild)\r\n      }\r\n    }\r\n    // 如果是其他数据类型\r\n    else {\r\n      let vnode = new TextVNode(String(child))\r\n      this.ele.appendChild(vnode.createTextNode())\r\n    }\r\n  }\r\n}","import Component from './component';\r\nimport { PropValue } from './value';\r\nimport { TextVNode, ElementVNode, SubComponent, ComponentVNode } from './vnode'\r\n\r\nexport function mount(selector: string, rootNode: Component) {\r\n  let ele = document.querySelector(selector)\r\n  let rootEle = rootNode.renderRoot().createEle()\r\n  if (ele && rootEle) {\r\n    if (ele.parentNode) {\r\n      ele.parentNode.replaceChild(rootEle, ele)\r\n    }\r\n  }\r\n}\r\n\r\nexport type SubConstructor = new (props: Record<any, any>, children: any[]) => SubComponent\r\nexport function createNode(a: string | SubConstructor, b?: {}, c?: []): ElementVNode | ComponentVNode {\r\n  if (typeof a === 'string') {\r\n    return new ElementVNode(a, b, c)\r\n  } else if (typeof a === 'function') {\r\n    return new ComponentVNode(a, b, c)\r\n  } else {\r\n    throw new Error('只能传入字符串或者构造函数')\r\n  }\r\n}\r\n\r\n\r\nexport class Vact {\r\n  static depPool: any[] = []\r\n  static getDepPool(): any[] {\r\n    return this.depPool\r\n  }\r\n\r\n  static Component = Component\r\n  static mount = mount\r\n  static createNode = createNode\r\n}\r\n","import { Vact } from './src/application'\r\n\r\nexport const mount = Vact.mount\r\nexport const Component = Vact.Component\r\nexport const createNode = Vact.createNode\r\nexport default Vact\r\n\r\n"],"names":["EventHandlers","EventEmitter","init","call","this","$getMaxListeners","that","undefined","_maxListeners","defaultMaxListeners","emitNone","handler","isFn","self","len","length","listeners","arrayClone","i","emitOne","arg1","emitTwo","arg2","emitThree","arg3","emitMany","args","apply","_addListener","target","type","listener","prepend","m","events","existing","e","TypeError","_events","newListener","emit","_eventsCount","unshift","push","warned","w","Error","name","emitter","count","console","warn","log","_onceWrap","fired","g","removeListener","arguments","listenerCount","evlistener","arr","copy","Array","prototype","Object","create","usingDomains","domain","active","getPrototypeOf","setMaxListeners","n","isNaN","getMaxListeners","er","doError","error","err","context","domainEmitter","domainThrown","addListener","on","prependListener","once","prependOnceListener","list","position","originalListener","index","k","pop","spliceOne","removeAllListeners","key","keys","ret","unwrapListeners","eventNames","Reflect","ownKeys","PropValue","constructor","value","dataProxy","super","dep","setDep","watcher","valueOf","toString","set","get","notify","forEach","update","Watcher","fn","DataProxyValue","valueMap","WeakMap","getProp","prop","valueTarget","propValue","isArray","Proxy","receiver","res","getValueTarget","setValueTarget","ArrayProxy","data","dataProxyValue","depArr","Vact","depPool","includes","replaceProps","getData","DataProxyTest","Component","config","setData","setProps","props","setChildren","children","renderRoot","render","createNode","VNode","ELEMENT","TEXT","COMPONENT","TextVNode","text","createTextNode","textNode","document","ComponentVNode","Constructor","depProps","pool","result","splice","indexOf","item","component","getComponent","ElementVNode","tag","createEle","ele","createElement","pattern","test","mat","match","addEventListener","toLocaleLowerCase","bind","_a","setAttribute","child","addChild","getRealNode","realNode","String","getRealNodeList","childList","addChildren","pivot","fragment","createDocumentFragment","appendChild","insertBefore","removeChildren","remove","vnode","realNodeList","newVnodeList","newVNode","newRealNode","nodeType","nodeValue","replaceChild","_b","subChild","a","b","c","nativeEvents","onClick","static","mount","selector","rootNode","querySelector","rootEle","parentNode"],"mappings":"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"}