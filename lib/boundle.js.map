{"version":3,"file":"boundle.js","sources":["../node_modules/rollup-plugin-node-polyfills/polyfills/events.js","../src/value.ts","../src/application.ts","../src/proxy.ts","../src/state.ts","../src/children.ts","../src/vnode/baseNode.ts","../src/vnode/slot.ts","../src/vnode/component.ts","../src/vnode/text.ts","../src/vnode/fragment.ts","../src/utils/index.ts","../src/vnode/element.ts","../src/vnode/arrayNode.ts","../src/component.ts","../index.ts"],"sourcesContent":["'use strict';\n\nvar domain;\n\n// This constructor is used to store event handlers. Instantiating this is\n// faster than explicitly calling `Object.create(null)` to get a \"clean\" empty\n// object (tested with v8 v4.9).\nfunction EventHandlers() {}\nEventHandlers.prototype = Object.create(null);\n\nfunction EventEmitter() {\n  EventEmitter.init.call(this);\n}\nexport default EventEmitter;\nexport {EventEmitter};\n\n// nodejs oddity\n// require('events') === require('events').EventEmitter\nEventEmitter.EventEmitter = EventEmitter\n\nEventEmitter.usingDomains = false;\n\nEventEmitter.prototype.domain = undefined;\nEventEmitter.prototype._events = undefined;\nEventEmitter.prototype._maxListeners = undefined;\n\n// By default EventEmitters will print a warning if more than 10 listeners are\n// added to it. This is a useful default which helps finding memory leaks.\nEventEmitter.defaultMaxListeners = 10;\n\nEventEmitter.init = function() {\n  this.domain = null;\n  if (EventEmitter.usingDomains) {\n    // if there is an active domain, then attach to it.\n    if (domain.active && !(this instanceof domain.Domain)) {\n      this.domain = domain.active;\n    }\n  }\n\n  if (!this._events || this._events === Object.getPrototypeOf(this)._events) {\n    this._events = new EventHandlers();\n    this._eventsCount = 0;\n  }\n\n  this._maxListeners = this._maxListeners || undefined;\n};\n\n// Obviously not all Emitters should be limited to 10. This function allows\n// that to be increased. Set to zero for unlimited.\nEventEmitter.prototype.setMaxListeners = function setMaxListeners(n) {\n  if (typeof n !== 'number' || n < 0 || isNaN(n))\n    throw new TypeError('\"n\" argument must be a positive number');\n  this._maxListeners = n;\n  return this;\n};\n\nfunction $getMaxListeners(that) {\n  if (that._maxListeners === undefined)\n    return EventEmitter.defaultMaxListeners;\n  return that._maxListeners;\n}\n\nEventEmitter.prototype.getMaxListeners = function getMaxListeners() {\n  return $getMaxListeners(this);\n};\n\n// These standalone emit* functions are used to optimize calling of event\n// handlers for fast cases because emit() itself often has a variable number of\n// arguments and can be deoptimized because of that. These functions always have\n// the same number of arguments and thus do not get deoptimized, so the code\n// inside them can execute faster.\nfunction emitNone(handler, isFn, self) {\n  if (isFn)\n    handler.call(self);\n  else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n    for (var i = 0; i < len; ++i)\n      listeners[i].call(self);\n  }\n}\nfunction emitOne(handler, isFn, self, arg1) {\n  if (isFn)\n    handler.call(self, arg1);\n  else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n    for (var i = 0; i < len; ++i)\n      listeners[i].call(self, arg1);\n  }\n}\nfunction emitTwo(handler, isFn, self, arg1, arg2) {\n  if (isFn)\n    handler.call(self, arg1, arg2);\n  else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n    for (var i = 0; i < len; ++i)\n      listeners[i].call(self, arg1, arg2);\n  }\n}\nfunction emitThree(handler, isFn, self, arg1, arg2, arg3) {\n  if (isFn)\n    handler.call(self, arg1, arg2, arg3);\n  else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n    for (var i = 0; i < len; ++i)\n      listeners[i].call(self, arg1, arg2, arg3);\n  }\n}\n\nfunction emitMany(handler, isFn, self, args) {\n  if (isFn)\n    handler.apply(self, args);\n  else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n    for (var i = 0; i < len; ++i)\n      listeners[i].apply(self, args);\n  }\n}\n\nEventEmitter.prototype.emit = function emit(type) {\n  var er, handler, len, args, i, events, domain;\n  var needDomainExit = false;\n  var doError = (type === 'error');\n\n  events = this._events;\n  if (events)\n    doError = (doError && events.error == null);\n  else if (!doError)\n    return false;\n\n  domain = this.domain;\n\n  // If there is no 'error' event listener then throw.\n  if (doError) {\n    er = arguments[1];\n    if (domain) {\n      if (!er)\n        er = new Error('Uncaught, unspecified \"error\" event');\n      er.domainEmitter = this;\n      er.domain = domain;\n      er.domainThrown = false;\n      domain.emit('error', er);\n    } else if (er instanceof Error) {\n      throw er; // Unhandled 'error' event\n    } else {\n      // At least give some kind of context to the user\n      var err = new Error('Uncaught, unspecified \"error\" event. (' + er + ')');\n      err.context = er;\n      throw err;\n    }\n    return false;\n  }\n\n  handler = events[type];\n\n  if (!handler)\n    return false;\n\n  var isFn = typeof handler === 'function';\n  len = arguments.length;\n  switch (len) {\n    // fast cases\n    case 1:\n      emitNone(handler, isFn, this);\n      break;\n    case 2:\n      emitOne(handler, isFn, this, arguments[1]);\n      break;\n    case 3:\n      emitTwo(handler, isFn, this, arguments[1], arguments[2]);\n      break;\n    case 4:\n      emitThree(handler, isFn, this, arguments[1], arguments[2], arguments[3]);\n      break;\n    // slower\n    default:\n      args = new Array(len - 1);\n      for (i = 1; i < len; i++)\n        args[i - 1] = arguments[i];\n      emitMany(handler, isFn, this, args);\n  }\n\n  if (needDomainExit)\n    domain.exit();\n\n  return true;\n};\n\nfunction _addListener(target, type, listener, prepend) {\n  var m;\n  var events;\n  var existing;\n\n  if (typeof listener !== 'function')\n    throw new TypeError('\"listener\" argument must be a function');\n\n  events = target._events;\n  if (!events) {\n    events = target._events = new EventHandlers();\n    target._eventsCount = 0;\n  } else {\n    // To avoid recursion in the case that type === \"newListener\"! Before\n    // adding it to the listeners, first emit \"newListener\".\n    if (events.newListener) {\n      target.emit('newListener', type,\n                  listener.listener ? listener.listener : listener);\n\n      // Re-assign `events` because a newListener handler could have caused the\n      // this._events to be assigned to a new object\n      events = target._events;\n    }\n    existing = events[type];\n  }\n\n  if (!existing) {\n    // Optimize the case of one listener. Don't need the extra array object.\n    existing = events[type] = listener;\n    ++target._eventsCount;\n  } else {\n    if (typeof existing === 'function') {\n      // Adding the second element, need to change to array.\n      existing = events[type] = prepend ? [listener, existing] :\n                                          [existing, listener];\n    } else {\n      // If we've already got an array, just append.\n      if (prepend) {\n        existing.unshift(listener);\n      } else {\n        existing.push(listener);\n      }\n    }\n\n    // Check for listener leak\n    if (!existing.warned) {\n      m = $getMaxListeners(target);\n      if (m && m > 0 && existing.length > m) {\n        existing.warned = true;\n        var w = new Error('Possible EventEmitter memory leak detected. ' +\n                            existing.length + ' ' + type + ' listeners added. ' +\n                            'Use emitter.setMaxListeners() to increase limit');\n        w.name = 'MaxListenersExceededWarning';\n        w.emitter = target;\n        w.type = type;\n        w.count = existing.length;\n        emitWarning(w);\n      }\n    }\n  }\n\n  return target;\n}\nfunction emitWarning(e) {\n  typeof console.warn === 'function' ? console.warn(e) : console.log(e);\n}\nEventEmitter.prototype.addListener = function addListener(type, listener) {\n  return _addListener(this, type, listener, false);\n};\n\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\n\nEventEmitter.prototype.prependListener =\n    function prependListener(type, listener) {\n      return _addListener(this, type, listener, true);\n    };\n\nfunction _onceWrap(target, type, listener) {\n  var fired = false;\n  function g() {\n    target.removeListener(type, g);\n    if (!fired) {\n      fired = true;\n      listener.apply(target, arguments);\n    }\n  }\n  g.listener = listener;\n  return g;\n}\n\nEventEmitter.prototype.once = function once(type, listener) {\n  if (typeof listener !== 'function')\n    throw new TypeError('\"listener\" argument must be a function');\n  this.on(type, _onceWrap(this, type, listener));\n  return this;\n};\n\nEventEmitter.prototype.prependOnceListener =\n    function prependOnceListener(type, listener) {\n      if (typeof listener !== 'function')\n        throw new TypeError('\"listener\" argument must be a function');\n      this.prependListener(type, _onceWrap(this, type, listener));\n      return this;\n    };\n\n// emits a 'removeListener' event iff the listener was removed\nEventEmitter.prototype.removeListener =\n    function removeListener(type, listener) {\n      var list, events, position, i, originalListener;\n\n      if (typeof listener !== 'function')\n        throw new TypeError('\"listener\" argument must be a function');\n\n      events = this._events;\n      if (!events)\n        return this;\n\n      list = events[type];\n      if (!list)\n        return this;\n\n      if (list === listener || (list.listener && list.listener === listener)) {\n        if (--this._eventsCount === 0)\n          this._events = new EventHandlers();\n        else {\n          delete events[type];\n          if (events.removeListener)\n            this.emit('removeListener', type, list.listener || listener);\n        }\n      } else if (typeof list !== 'function') {\n        position = -1;\n\n        for (i = list.length; i-- > 0;) {\n          if (list[i] === listener ||\n              (list[i].listener && list[i].listener === listener)) {\n            originalListener = list[i].listener;\n            position = i;\n            break;\n          }\n        }\n\n        if (position < 0)\n          return this;\n\n        if (list.length === 1) {\n          list[0] = undefined;\n          if (--this._eventsCount === 0) {\n            this._events = new EventHandlers();\n            return this;\n          } else {\n            delete events[type];\n          }\n        } else {\n          spliceOne(list, position);\n        }\n\n        if (events.removeListener)\n          this.emit('removeListener', type, originalListener || listener);\n      }\n\n      return this;\n    };\n\nEventEmitter.prototype.removeAllListeners =\n    function removeAllListeners(type) {\n      var listeners, events;\n\n      events = this._events;\n      if (!events)\n        return this;\n\n      // not listening for removeListener, no need to emit\n      if (!events.removeListener) {\n        if (arguments.length === 0) {\n          this._events = new EventHandlers();\n          this._eventsCount = 0;\n        } else if (events[type]) {\n          if (--this._eventsCount === 0)\n            this._events = new EventHandlers();\n          else\n            delete events[type];\n        }\n        return this;\n      }\n\n      // emit removeListener for all listeners on all events\n      if (arguments.length === 0) {\n        var keys = Object.keys(events);\n        for (var i = 0, key; i < keys.length; ++i) {\n          key = keys[i];\n          if (key === 'removeListener') continue;\n          this.removeAllListeners(key);\n        }\n        this.removeAllListeners('removeListener');\n        this._events = new EventHandlers();\n        this._eventsCount = 0;\n        return this;\n      }\n\n      listeners = events[type];\n\n      if (typeof listeners === 'function') {\n        this.removeListener(type, listeners);\n      } else if (listeners) {\n        // LIFO order\n        do {\n          this.removeListener(type, listeners[listeners.length - 1]);\n        } while (listeners[0]);\n      }\n\n      return this;\n    };\n\nEventEmitter.prototype.listeners = function listeners(type) {\n  var evlistener;\n  var ret;\n  var events = this._events;\n\n  if (!events)\n    ret = [];\n  else {\n    evlistener = events[type];\n    if (!evlistener)\n      ret = [];\n    else if (typeof evlistener === 'function')\n      ret = [evlistener.listener || evlistener];\n    else\n      ret = unwrapListeners(evlistener);\n  }\n\n  return ret;\n};\n\nEventEmitter.listenerCount = function(emitter, type) {\n  if (typeof emitter.listenerCount === 'function') {\n    return emitter.listenerCount(type);\n  } else {\n    return listenerCount.call(emitter, type);\n  }\n};\n\nEventEmitter.prototype.listenerCount = listenerCount;\nfunction listenerCount(type) {\n  var events = this._events;\n\n  if (events) {\n    var evlistener = events[type];\n\n    if (typeof evlistener === 'function') {\n      return 1;\n    } else if (evlistener) {\n      return evlistener.length;\n    }\n  }\n\n  return 0;\n}\n\nEventEmitter.prototype.eventNames = function eventNames() {\n  return this._eventsCount > 0 ? Reflect.ownKeys(this._events) : [];\n};\n\n// About 1.5x faster than the two-arg version of Array#splice().\nfunction spliceOne(list, index) {\n  for (var i = index, k = i + 1, n = list.length; k < n; i += 1, k += 1)\n    list[i] = list[k];\n  list.pop();\n}\n\nfunction arrayClone(arr, i) {\n  var copy = new Array(i);\n  while (i--)\n    copy[i] = arr[i];\n  return copy;\n}\n\nfunction unwrapListeners(arr) {\n  var ret = new Array(arr.length);\n  for (var i = 0; i < ret.length; ++i) {\n    ret[i] = arr[i].listener || arr[i];\n  }\n  return ret;\n}\n","import { EventEmitter } from \"events\"\r\nimport { DataProxy } from \"./proxy\"\r\nimport { runTask } from './application'\r\n\r\n\r\nexport class PropValue extends EventEmitter {\r\n  public value: any\r\n  private dep: Array<Watcher>\r\n  // 该值所属数据响应中心\r\n  dataProxy?: DataProxy<object>\r\n\r\n  constructor(value: any, dataProxy?: DataProxy<object>) {\r\n    super()\r\n    this.value = value\r\n    this.dep = []\r\n    this.dataProxy = dataProxy\r\n  }\r\n\r\n  setDep(watcher: Watcher) {\r\n    this.dep.push(watcher)\r\n  }\r\n\r\n  valueOf() {\r\n    return this.value\r\n  }\r\n\r\n  toString() {\r\n    return this.value\r\n  }\r\n\r\n  set(value: any) {\r\n    this.value = value\r\n  }\r\n\r\n  get(): any {\r\n    return this.value\r\n  }\r\n\r\n  notify() {\r\n    this.dep.forEach(watcher => {\r\n      watcher.update()\r\n    })\r\n    this.emit('change', this.value)\r\n  }\r\n\r\n}\r\n\r\n\r\n\r\nexport class Watcher {\r\n  fn: () => void\r\n  running: boolean = false\r\n\r\n  constructor(fn: () => void) {\r\n    this.fn = fn\r\n  }\r\n\r\n  update() {\r\n    if (this.running) return\r\n    this.running = true\r\n    let fn = () => {\r\n      this.fn()\r\n      this.running = false\r\n    }\r\n    runTask(fn)\r\n  }\r\n}","import { createNode, mount } from './utils';\r\nimport { PropValue } from './value';\r\n\r\nexport class Vact {\r\n  public static Fragment = Symbol('fragment标识')\r\n  private static depPool: any[] = []\r\n  static getDepPool(): any[] {\r\n    return this.depPool\r\n  }\r\n\r\n  private static updating: boolean = false\r\n  private static watcherTask: Function[] = []\r\n  static runTask(fn: Function) {\r\n    this.watcherTask.push(fn)\r\n    if (!this.updating) {\r\n      this.updating = true\r\n      Promise.resolve()\r\n        .then(() => {\r\n          let callbcak: Function | undefined\r\n          while (callbcak = this.watcherTask.shift()) {\r\n            callbcak()\r\n          }\r\n        })\r\n        .then(() => this.updating = false)\r\n    }\r\n  }\r\n\r\n  static Component: any;\r\n  static mount = mount\r\n  static createNode = createNode\r\n}\r\n\r\nexport function getDepPool(): any[] {\r\n  return Vact.getDepPool()\r\n}\r\n\r\nexport function getDepProps<T>(fn: () => T): [PropValue[], T] {\r\n  let depProps: PropValue[] = []\r\n  let pool = Vact.getDepPool()\r\n  pool.push(depProps)\r\n  let res = fn()\r\n  pool.splice(pool.indexOf(depProps), 1)\r\n  return [depProps, res]\r\n}\r\n\r\nexport function runTask(fn: Function) {\r\n  Vact.runTask(fn)\r\n}\r\n","import { getDepPool } from \"./application\";\r\nimport { PropValue } from \"./value\";\r\n\r\n/**\r\n * 数据响应式中心\r\n*/\r\n\r\n/**\r\n * 数据事件存放处\r\n*/\r\n\r\nexport class DataEventProxy {\r\n  private valueMap: WeakMap<{}, any>\r\n  constructor() {\r\n    this.valueMap = new WeakMap()\r\n  }\r\n\r\n  getProp(target: Record<any, any>, prop: any): PropValue {\r\n    if (!this.valueMap.get(target)) {\r\n      this.valueMap.set(target, {})\r\n    }\r\n\r\n    let valueTarget = this.valueMap.get(target)\r\n\r\n    if (!valueTarget[prop]) {\r\n\r\n      let propValue = new PropValue(Array.isArray(target[prop]) ? new Proxy(target[prop], {\r\n        get(target, prop, receiver) {\r\n          return Reflect.get(target, prop, receiver)\r\n        },\r\n        set(target, prop, value, receiver) {\r\n          // 这里一定要先设置再通知\r\n          let res = Reflect.set(target, prop, value, receiver)\r\n          propValue.notify()\r\n          return res\r\n        }\r\n      }) : target[prop])\r\n      valueTarget[prop] = propValue\r\n    }\r\n    return valueTarget[prop]\r\n  }\r\n  // 获取用于绑定属性事件的代理对象\r\n  getEventProxy(target: Record<any, any>): Record<any, any> {\r\n    return this.valueMap.get(target)\r\n  }\r\n\r\n  // 设置用于绑定属性事件的代理对象\r\n  setEventProxy(target: Record<any, any>, valueTarget: Record<any, any>) {\r\n    this.valueMap.set(target, valueTarget)\r\n  }\r\n\r\n}\r\n\r\n/**\r\n * 监控数据响应变化处\r\n*/\r\nexport class DataProxy<T extends object> {\r\n  private target: T\r\n  private data: T\r\n  private dataProxyValue: DataEventProxy\r\n\r\n  constructor(data: T) {\r\n    this.target = data\r\n    this.dataProxyValue = new DataEventProxy()\r\n    // 监控普通对象\r\n    const handler: ProxyHandler<any> = {\r\n      get: (target, prop, receiver) => {\r\n\r\n        if (typeof target[prop] === 'object' && target[prop] !== null && !Array.isArray(target[prop]) && target[prop].constructor === Object) {\r\n          return new Proxy(target[prop], handler)\r\n        } else if (typeof target[prop] === 'function') {\r\n          return Reflect.get(target, prop, receiver)\r\n        }\r\n        else {\r\n          let propValue = this.dataProxyValue.getProp(target, prop)\r\n          for (let depArr of getDepPool()) {\r\n            if (!depArr.includes(propValue)) {\r\n              depArr.push(propValue)\r\n            }\r\n          }\r\n          if (Array.isArray(target)) {\r\n            return Reflect.get(target, prop, receiver)\r\n          } else {\r\n            return propValue.value\r\n          }\r\n        }\r\n      },\r\n      set: (target, prop, value, receiver) => {\r\n        if (typeof value === 'object' && value !== null && !Array.isArray(value) && value.constructor === Object) {\r\n          // 当对象被替换为新对象时 通知对象里所有的响应式\r\n          let valueTarget = this.dataProxyValue.getEventProxy(target[prop])\r\n          let res = Reflect.set(target, prop, value, receiver)\r\n          this.replaceProps(value, valueTarget)\r\n          return res\r\n        } else {\r\n          let propValue = this.dataProxyValue.getProp(target, prop)\r\n\r\n          propValue.value = Array.isArray(value) ? new Proxy(value, {\r\n            get(target, prop, receiver) {\r\n              return Reflect.get(target, prop, receiver)\r\n            },\r\n            set(target, prop, value, receiver) {\r\n              let res = Reflect.set(target, prop, value, receiver)\r\n              propValue.notify()\r\n              return res\r\n            }\r\n          }) : value\r\n\r\n\r\n          let res = Reflect.set(target, prop, value, receiver)\r\n          propValue.notify()\r\n          return res\r\n        }\r\n\r\n\r\n      }\r\n\r\n    }\r\n    this.data = new Proxy(data, handler)\r\n  }\r\n\r\n\r\n  public getData(): T {\r\n    return this.data\r\n  }\r\n\r\n  public getTarget(): T {\r\n    return this.target\r\n  }\r\n\r\n  public getEventProxy(): DataEventProxy {\r\n    return this.dataProxyValue\r\n  }\r\n\r\n  // 当对象属性被新对象替换时\r\n  private replaceProps(target: Record<any, any>, valueTarget: Record<any, any>) {\r\n    for (let prop in valueTarget) {\r\n      let propValue = valueTarget[prop]\r\n      propValue.value = target[prop]\r\n      propValue.notify()\r\n    }\r\n    this.dataProxyValue.setEventProxy(target, valueTarget)\r\n  }\r\n\r\n}\r\n\r\n","import { DataProxy } from \"./proxy\";\r\n\r\nexport interface StateConfig {\r\n  // 是否开启数组中对象的监控\r\n  deep?: boolean\r\n}\r\n\r\nexport class State<T extends object> {\r\n\r\n  private dataProxy: DataProxy<T>\r\n  private config?: StateConfig\r\n\r\n  constructor(data: T, config?: StateConfig) {\r\n    this.dataProxy = new DataProxy<T>(data)\r\n    this.config = config\r\n  }\r\n\r\n  get data(): T {\r\n    return this.dataProxy.getData()\r\n  }\r\n\r\n  // 用于监控数据变化\r\n  watch(path: string, fn: (value: any) => void): void {\r\n    let props = path.split('.')\r\n    if (!props.length) return;\r\n    let obj: Record<any, any> = this.dataProxy.getTarget()\r\n    let prop: string = props.shift() || ''\r\n    while (props.length) {\r\n      let p = props.shift()\r\n      if (p) {\r\n        obj = obj[prop]\r\n        prop = p\r\n      }\r\n    }\r\n\r\n    let events = this.dataProxy.getEventProxy()\r\n    let propValue = events.getProp(obj, prop)\r\n    propValue.on('change', fn)\r\n  }\r\n\r\n}","import { getDepProps } from \"./application\"\r\nimport { TextVNode, ElementVNode, ComponentVNode, FragmentVNode, SlotVNode, ArrayVNode } from \"./vnode\"\r\n\r\n\r\n\r\n// 这里指的是能渲染元素的parentNode\r\nexport type ParentVNode = ElementVNode\r\n// 标准化后的子元素节点\r\nexport type ChildVNode = TextVNode | ElementVNode | ComponentVNode | FragmentVNode | ArrayVNode\r\n// 我们能获取的基本子元素节点\r\nexport type BaseChildVNode = string | ElementVNode | ComponentVNode | FragmentVNode | ArrayVNode | Array<string | ElementVNode | ComponentVNode | FragmentVNode>\r\nexport type RBaseChildVNode = BaseChildVNode | (() => BaseChildVNode)\r\n\r\n/**\r\n * 处理子节点的添加\r\n*/\r\n\r\nexport function setNodeChildren(parentNode: ParentVNode, children: Array<RBaseChildVNode>): Array<ChildVNode> {\r\n  let standardNodeList: Array<ChildVNode> = []\r\n  let si = 0\r\n  for (let i = 0; i < children.length; i++) {\r\n    let child = children[i]\r\n    // 如果是函数要先看函数的返回值 不然直接添加\r\n    if (typeof child !== 'function') {\r\n      let snode = standardNode(child, parentNode)\r\n      snode.createRNode() // 创建真实节点\r\n      standardNodeList[si] = snode\r\n      snode.mount() // 将真实节点挂载到父节点\r\n      si++\r\n      continue\r\n    }\r\n\r\n    let [propValues, result] = getDepProps(child)\r\n\r\n    if (result instanceof SlotVNode) {\r\n\r\n      let schildren = result.children\r\n      for (let j = 0; j < schildren.length; j++) {\r\n        let schild = () => schildren[j]\r\n        let [propValues, result] = getDepProps(schild)\r\n\r\n        let snode = standardNode(result, parentNode)\r\n        snode.createRNode() // 创建真实节点\r\n        let csi = si\r\n        standardNodeList[csi] = snode\r\n        si++\r\n        let fn = () => {\r\n          let nextNode = standardNode((schild as () => BaseChildVNode)(), parentNode)\r\n          nextNode.createRNode()\r\n          replaceNode(nextNode, standardNodeList[csi])\r\n          standardNodeList[csi] = nextNode\r\n        }\r\n        snode.setDeps(propValues, fn)\r\n        snode.bindDeps()\r\n        snode.mount() // 将真实节点挂载到父节点\r\n      }\r\n\r\n      continue\r\n    }\r\n\r\n\r\n    let snode = standardNode(result, parentNode)\r\n    snode.createRNode() // 创建真实节点\r\n    let csi = si\r\n    standardNodeList[csi] = snode\r\n    si++\r\n    let fn = () => {\r\n      let nextNode = standardNode((child as () => BaseChildVNode)(), parentNode)\r\n      nextNode.createRNode()\r\n      replaceNode(nextNode, standardNodeList[csi])\r\n      standardNodeList[csi] = nextNode\r\n    }\r\n    snode.setDeps(propValues, fn)\r\n    snode.bindDeps()\r\n    snode.mount() // 将真实节点挂载到父节点\r\n\r\n  }\r\n\r\n  return standardNodeList\r\n  // parentNode.setChildrenNodes(standardNodeList)\r\n  // parentNode.mount()\r\n}\r\n\r\n\r\ntype StandardNodeReturn<T> = T extends true ? ChildVNode : TextVNode | ElementVNode | ComponentVNode | FragmentVNode\r\n// 首先标准化节点\r\nexport function standardNode<T extends boolean>(baseNode: BaseChildVNode, parentNode?: ParentVNode, arrIncluded?: T): StandardNodeReturn<T> {\r\n  if (typeof baseNode === \"string\") {\r\n    let textNode = new TextVNode(baseNode)\r\n    textNode.setParentVNode(parentNode)\r\n    return textNode\r\n  } else if (baseNode instanceof ElementVNode) {  // 如果是元素节点\r\n    baseNode.setParentVNode(parentNode)\r\n  } else if (baseNode instanceof ComponentVNode) {\r\n    baseNode.setParentVNode(parentNode)\r\n  } else if (baseNode instanceof FragmentVNode) {\r\n    baseNode.setParentVNode(parentNode)\r\n  } else if (baseNode instanceof ArrayVNode) {\r\n    baseNode.setParentVNode(parentNode)\r\n  } else if (Array.isArray(baseNode) && (arrIncluded === undefined || arrIncluded)) {\r\n    let arrNode = new ArrayVNode({}, baseNode)\r\n    arrNode.setParentVNode(parentNode)\r\n    return arrNode as StandardNodeReturn<T>\r\n  }\r\n  else {\r\n    // 特殊处理 为null则不渲染返回空节点\r\n    if (baseNode === null) baseNode = ''\r\n    let textNode = new TextVNode(String(baseNode))\r\n    textNode.setParentVNode(parentNode)\r\n    return textNode\r\n  }\r\n  return baseNode as StandardNodeReturn<T>\r\n}\r\n\r\nexport function replaceNode(newNode: ChildVNode, oldNode: ChildVNode) {\r\n  oldNode.replaceWith(newNode)\r\n}\r\n","import { ChildVNode } from \"../children\"\r\nimport { PropValue, Watcher } from \"../value\"\r\nimport { ElementVNode } from \"./element\"\r\n\r\nexport abstract class VNode {\r\n  // 父虚拟结点\r\n  parentVNode?: ElementVNode\r\n  // 子节点类型\r\n  abstract type: number\r\n\r\n  static ELEMENT: number = 0\r\n  static TEXT: number = 1\r\n  static COMPONENT: number = 2\r\n  static FRAGMENT: number = 3\r\n\r\n  // 用于获取挂载到虚拟节点的真实节点\r\n  abstract getRNode(): HTMLElement | Text\r\n\r\n  // 设置节点的父节点\r\n  setParentVNode(parent?: ElementVNode) {\r\n    this.parentVNode = parent\r\n  }\r\n\r\n  // 节点依赖的属性\r\n  propValues?: Array<PropValue>\r\n  // 节点的生成函数\r\n  fn?: () => void\r\n  abstract createRNode(): void\r\n\r\n  // 设置节点的依赖\r\n  setDeps(propValues: Array<PropValue>, fn: () => void): void {\r\n    this.propValues = propValues\r\n    this.fn = fn\r\n  }\r\n\r\n  // 绑定节点的依赖\r\n  bindDeps(): void {\r\n    if (this.propValues && this.fn) {\r\n      // let curMountedNode: ChildVNode = this as unknown as ChildVNode\r\n      // let fn = () => {\r\n      //   let nextNode = standardNode(this.fn!(), this.parentVNode)\r\n      //   nextNode.createRNode()\r\n      //   replaceNode(nextNode, curMountedNode)\r\n      //   curMountedNode = nextNode\r\n      // }\r\n      let watcher = new Watcher(this.fn)\r\n      this.propValues.forEach(propValue => propValue.setDep(watcher))\r\n    }\r\n  }\r\n\r\n  abstract mount(): void\r\n  abstract replaceWith(node: ChildVNode): void\r\n}","import { BaseChildVNode } from \"../children\"\r\n\r\nexport class SlotVNode {\r\n  children: Array<BaseChildVNode>\r\n  constructor(children: Array<BaseChildVNode>) {\r\n    this.children = children\r\n  }\r\n}","import { FunComponent } from \"../component\"\r\nimport { getDepProps } from \"../application\"\r\nimport { DataProxy } from \"../proxy\"\r\nimport { Watcher } from \"../value\"\r\nimport { VNode } from \"./baseNode\"\r\nimport { SubComponent } from \"./type\"\r\nimport { ElementVNode } from \"./element\"\r\nimport { BaseChildVNode, ChildVNode, RBaseChildVNode } from \"../children\"\r\nimport { FragmentVNode } from \"./fragment\"\r\nimport { SlotVNode } from \"./slot\"\r\n\r\n/**\r\n * 组件节点\r\n*/\r\ninterface SubComponentConstructor {\r\n  new(): SubComponent\r\n}\r\ntype FunComponentType = (props?: Record<any, any>, children?: Record<string, SlotVNode>) => ElementVNode\r\ntype ComponentConstructor = SubComponentConstructor | FunComponentType\r\n\r\nexport class ComponentVNode extends VNode {\r\n  type: number = VNode.COMPONENT\r\n  component?: SubComponent\r\n  Constructor: ComponentConstructor\r\n  props?: Record<any, any>\r\n  children?: RBaseChildVNode[]\r\n  constructor(Constructor: ComponentConstructor, props?: Record<any, any>, children?: RBaseChildVNode[]) {\r\n    super()\r\n    this.Constructor = Constructor\r\n    this.props = props || {}\r\n    if (Array.isArray(children)) {\r\n      this.children = children\r\n    } else {\r\n      if (children !== undefined && children !== null) {\r\n        this.children = [children]\r\n      } else {\r\n        this.children = []\r\n      }\r\n    }\r\n\r\n    // 在初始化内部一定不要调用init\r\n  }\r\n\r\n  setComponentProps(): Record<any, any> {\r\n    // 处理自定义组件的属性\r\n    let props: Record<any, any> = new DataProxy({}).getData()\r\n    for (let prop in this.props) {\r\n      // 如果属性不为函数则不需要设置响应式\r\n      if (typeof this.props[prop] !== 'function') {\r\n        props[prop] = this.props[prop]\r\n        continue\r\n      }\r\n\r\n      let [depProps, result] = getDepProps(this.props[prop])\r\n\r\n      if (typeof result === 'function') {\r\n        props[prop] = result\r\n      } else {\r\n        props[prop] = result\r\n        let fn = () => props[prop] = this.props![prop]()\r\n        depProps.forEach(item => {\r\n          item.setDep(new Watcher(fn))\r\n        })\r\n      }\r\n    }\r\n\r\n    return props\r\n  }\r\n\r\n  setComponentChildren(): Record<string, SlotVNode> {\r\n    let slots: Record<string, SlotVNode> = {}\r\n\r\n    let getSlot = (name: string) => {\r\n      if (slots[name]) { return slots[name] }\r\n      else {\r\n        return slots[name] = new SlotVNode(new DataProxy<any[]>([]).getData())\r\n      }\r\n    }\r\n\r\n    if (this.children) {\r\n      for (let i = 0; i < this.children.length; i++) {\r\n        let child = this.children[i]\r\n        if (typeof child !== 'function') {\r\n          if (typeof child === 'string' || Array.isArray(child)) {\r\n            getSlot('default').children.push(child)\r\n          } else {\r\n            let slotProp: any = undefined\r\n            if (child.props) {\r\n              slotProp = child.props.slot\r\n            }\r\n\r\n            let slotName = 'default'\r\n            if (slotProp !== undefined && slotProp !== null) {\r\n              slotName = typeof slotProp === 'function' ? slotProp() : slotProp\r\n            }\r\n            let c = getSlot(slotName).children\r\n            c[c.length] = child\r\n          }\r\n          continue\r\n        }\r\n\r\n        let [depProps, result] = getDepProps<BaseChildVNode>(child)\r\n        if (typeof result === 'string' || Array.isArray(result)) {\r\n          const slotChildren = getSlot('default').children\r\n          let index = slotChildren.length\r\n          slotChildren[index] = result\r\n          let fn = () => slotChildren[index] = (child as () => BaseChildVNode)()\r\n          depProps.forEach(item => item.setDep(new Watcher(fn)))\r\n        } else {\r\n          let slotProp: any = undefined\r\n          if (result.props) {\r\n            slotProp = result.props.slot\r\n          }\r\n\r\n          let slotName = 'default'\r\n          if (slotProp !== undefined && slotProp !== null) {\r\n            slotName = typeof slotProp === 'function' ? slotProp() : slotProp\r\n          }\r\n          const slotChildren = getSlot(slotName).children\r\n          let index = slotChildren.length\r\n          slotChildren[index] = result\r\n          let fn = () => slotChildren[index] = (child as () => BaseChildVNode)()\r\n          depProps.forEach(item => item.setDep(new Watcher(fn)))\r\n        }\r\n      }\r\n    }\r\n    return slots\r\n  }\r\n\r\n  getComponent(): SubComponent {\r\n    return this.component!\r\n  }\r\n\r\n\r\n  getRNode(): HTMLElement {\r\n    return this.component!.getEFVNode().getRNode()\r\n  }\r\n\r\n  // 创建并初始化真实节点\r\n  createRNode(): void {\r\n    if (this.component) return // 如果已经初始化过则不要再初始化\r\n    let Constructor = this.Constructor\r\n    if (Constructor.prototype && Constructor.prototype.classComponent) {\r\n      this.component = new (Constructor as SubComponentConstructor)()\r\n    } else {\r\n      let funComponent = new FunComponent()\r\n      funComponent.setRenderFun(Constructor as FunComponentType)\r\n      this.component = funComponent\r\n    }\r\n\r\n    this.component.setProps(this.setComponentProps())\r\n    this.component.setChildren(this.setComponentChildren())\r\n\r\n    let ef = this.component.createEFVNode()\r\n    // 先设置父元素\r\n    ef.setParentVNode(this.parentVNode)\r\n    ef.createRNode()\r\n  }\r\n\r\n  mount() {\r\n    this.getComponent().getEFVNode().mount()\r\n  }\r\n\r\n  replaceWith(node: ChildVNode) {\r\n    let ef = this.getComponent().getEFVNode()\r\n    ef.replaceWith(node)\r\n  }\r\n\r\n  remove() {\r\n    let ef = this.component?.getEFVNode()\r\n    if (ef instanceof ElementVNode) {\r\n      ef.remove()\r\n    } else if (ef instanceof FragmentVNode) {\r\n      ef.remove()\r\n    }\r\n  }\r\n}\r\n\r\n\r\n","import { ChildVNode } from \"../children\"\r\nimport { VNode } from \"./baseNode\"\r\nimport { ComponentVNode } from \"./component\"\r\nimport { FragmentVNode } from \"./fragment\"\r\n\r\nexport class TextVNode extends VNode {\r\n  type: number = VNode.TEXT\r\n  text: string\r\n  textNode?: HTMLElement\r\n\r\n  constructor(text: string) {\r\n    super()\r\n    this.text = text\r\n  }\r\n\r\n  getRNode(): HTMLElement {\r\n    return this.textNode!\r\n  }\r\n\r\n  // 创建并初始化真实节点\r\n  createRNode(): void {\r\n    this.textNode = document.createTextNode(this.text) as unknown as HTMLElement\r\n  }\r\n\r\n  mount() {\r\n    this.parentVNode?.getRNode().appendChild(this.getRNode())\r\n  }\r\n\r\n  replaceWith(node: ChildVNode) {\r\n    if (node instanceof TextVNode) {\r\n      this.getRNode().nodeValue = node.getRNode().nodeValue\r\n      node.textNode = this.textNode\r\n      return\r\n    }\r\n\r\n    if (node instanceof FragmentVNode) {\r\n      this.parentVNode?.getRNode().insertBefore(node.getRNode(), this.getRNode())\r\n      this.getRNode().replaceWith(node.pivot.getRNode())\r\n    } else if (node instanceof ComponentVNode) {\r\n      let ef = node.getComponent().getEFVNode()\r\n      if (ef instanceof FragmentVNode) {\r\n        this.parentVNode?.getRNode().insertBefore(node.getRNode(), this.getRNode())\r\n        this.getRNode().replaceWith(ef.pivot.getRNode())\r\n      } else {\r\n        this.parentVNode?.getRNode().replaceChild(node.getRNode(), this.getRNode())\r\n      }\r\n    }\r\n    else {\r\n      this.parentVNode?.getRNode().replaceChild(node.getRNode(), this.getRNode())\r\n    }\r\n  }\r\n\r\n  remove() {\r\n    this.textNode?.remove()\r\n  }\r\n}","import { setNodeChildren } from \"../children\";\r\nimport { VNode } from \"./baseNode\";\r\nimport { TextVNode } from \"./text\";\r\nimport { ChildVNode, RBaseChildVNode } from \"../children\";\r\nimport { ComponentVNode } from \"./component\";\r\n\r\n\r\nexport class FragmentVNode extends VNode {\r\n  type: number = VNode.FRAGMENT;\r\n  props?: {\r\n    [key: string]: any\r\n  }\r\n  children?: Array<RBaseChildVNode>\r\n  fragment?: HTMLElement\r\n  VNodeChildren: Array<ChildVNode>\r\n  pivot: TextVNode // 锚点\r\n\r\n  constructor(props?: Record<any, any>, children?: any[]) {\r\n    super()\r\n    this.props = props\r\n    this.children = children\r\n    this.VNodeChildren = []\r\n    this.pivot = new TextVNode('')\r\n    this.pivot.createRNode()\r\n  }\r\n\r\n  getRNode(): HTMLElement {\r\n    return this.fragment!\r\n  }\r\n\r\n  /**\r\n   * 处理子节点\r\n  */\r\n\r\n  setChildren() {\r\n    if (!this.fragment || this.children === undefined || this.children === null) return\r\n    if (!Array.isArray(this.children)) this.children = [this.children]\r\n    this.VNodeChildren = setNodeChildren(this.parentVNode!, this.children)\r\n  }\r\n\r\n  // 创建并初始化真实节点\r\n  createRNode(): void {\r\n    if (this.fragment) return // 如果已经初始化过则不要再初始化\r\n    this.fragment = document.createDocumentFragment() as unknown as HTMLElement\r\n    // 处理标签子节点\r\n    this.setChildren()\r\n  }\r\n\r\n  mount() {\r\n    this.parentVNode?.getRNode().appendChild(this.getRNode())\r\n    this.parentVNode?.getRNode().appendChild(this.pivot.getRNode())\r\n  }\r\n\r\n  replaceWith(node: ChildVNode) {\r\n    this.remove()\r\n    this.parentVNode?.getRNode().insertBefore(node.getRNode(), this.pivot.getRNode())\r\n    if (node instanceof FragmentVNode) {\r\n      node.pivot = this.pivot\r\n    } else if (node instanceof ComponentVNode) {\r\n      let ef = node.getComponent().getEFVNode()\r\n      if (ef instanceof FragmentVNode) {\r\n        ef.pivot = this.pivot\r\n      }\r\n    }\r\n    else {\r\n      this.pivot.remove()\r\n    }\r\n  }\r\n\r\n  remove() {\r\n    this.VNodeChildren.forEach(node => node.remove())\r\n  }\r\n\r\n}","import { Vact } from '../application'\r\nimport { Component } from '../component'\r\nimport { State, StateConfig } from '../state'\r\nimport { ComponentVNode, ElementVNode } from '../vnode'\r\nimport { FragmentVNode } from '../vnode/fragment'\r\nimport { SubComponent } from '../vnode/type'\r\n\r\n// 获取一个响应式的对象\r\nexport function defineState(data: Record<string | number | symbol, any>, config?: StateConfig) {\r\n  return new State(data, config)\r\n}\r\n\r\nexport function mount(selector: string, rootNode: Component | ComponentVNode) {\r\n  let ele = document.querySelector(selector)\r\n  let rootEle: HTMLElement | undefined\r\n\r\n  if (rootNode instanceof Component) {\r\n    let ef = rootNode.createEFVNode()\r\n    ef.createRNode()\r\n    rootEle = ef.getRNode()\r\n  } else if (rootNode instanceof ComponentVNode) {\r\n    rootNode.createRNode()\r\n    rootEle = rootNode.getRNode()\r\n  }\r\n  if (ele && rootEle) {\r\n    if (ele.parentNode) {\r\n      ele.parentNode.replaceChild(rootEle, ele)\r\n    }\r\n  }\r\n}\r\n\r\nexport type SubConstructor = new () => SubComponent\r\nexport function createNode(nodeTag: string | SubConstructor | symbol, props?: Record<any, any>, children?: any[]): ElementVNode | ComponentVNode | FragmentVNode {\r\n  if (typeof nodeTag === 'string') {\r\n    return new ElementVNode(nodeTag, props, children)\r\n  } else if (typeof nodeTag === 'function') {\r\n    return new ComponentVNode(nodeTag, props, children)\r\n  } if (typeof nodeTag === 'symbol' && nodeTag === Vact.Fragment) {\r\n    return new FragmentVNode(props, children)\r\n  } else {\r\n    throw new Error('只能传入字符串或者构造函数')\r\n  }\r\n}","import { getDepProps } from \"../application\"\r\nimport { ChildVNode, RBaseChildVNode, setNodeChildren } from \"../children\"\r\nimport { Watcher } from \"../value\"\r\nimport { VNode } from \"./baseNode\"\r\nimport { ComponentVNode } from \"./component\"\r\nimport { FragmentVNode } from \"./fragment\"\r\n\r\nexport class ElementVNode extends VNode {\r\n  // propValues?: PropValue[]\r\n  // fn?: Function\r\n\r\n  tag: string\r\n  props?: {\r\n    [key: string]: any\r\n  }\r\n  children?: Array<RBaseChildVNode>\r\n  type: number = VNode.ELEMENT\r\n  ele?: HTMLElement\r\n\r\n  constructor(tag: string, props?: Record<any, any>, children?: any[]) {\r\n    super()\r\n    this.tag = tag;\r\n    this.props = props;\r\n    this.children = children;\r\n  }\r\n\r\n  getRNode(): HTMLElement {\r\n    return this.ele!\r\n  }\r\n\r\n  /**\r\n   * 处理原生node节点的属性绑定\r\n  */\r\n\r\n  setProps() {\r\n    if (!this.props || !this.ele) return\r\n\r\n    // 处理标签属性\r\n    for (let prop in this.props) {\r\n      // 如果是函数要先看函数的返回值 不然直接设置属性\r\n      if (typeof this.props[prop] !== 'function') {\r\n        setElementProp(this.ele, prop, this.props[prop])\r\n        continue;\r\n      }\r\n\r\n      let [depProps, result] = getDepProps<any>(this.props[prop])\r\n      setElementProp(this.ele, prop, result)\r\n\r\n      // 如果是函数则直接跳过\r\n      if (typeof result === 'function') continue\r\n      let fn = () => setElementProp(this.ele!, prop, this.props![prop]())\r\n      depProps.forEach(propValue => propValue.setDep(new Watcher(fn)))\r\n    }\r\n\r\n  }\r\n\r\n  // 创建并初始化真实节点\r\n  createRNode(): void {\r\n    if (this.ele) return // 如果已经初始化过则不要再初始化\r\n    this.ele = document.createElement(this.tag)\r\n    if (this.children === undefined || this.children === null) return\r\n    if (!Array.isArray(this.children)) this.children = [this.children]\r\n    // 处理标签属性\r\n    this.setProps()\r\n    // 处理标签子节点\r\n    setNodeChildren(this, this.children)\r\n  }\r\n\r\n  mount() {\r\n    this.parentVNode?.getRNode().appendChild(this.getRNode())\r\n  }\r\n\r\n  replaceWith(node: ChildVNode) {\r\n    if (node instanceof FragmentVNode) {\r\n      this.parentVNode?.getRNode().insertBefore(node.getRNode(), this.getRNode())\r\n      this.getRNode().replaceWith(node.pivot.getRNode())\r\n    } else if (node instanceof ComponentVNode) {\r\n      let ef = node.getComponent().getEFVNode()\r\n      if (ef instanceof FragmentVNode) {\r\n        this.parentVNode?.getRNode().insertBefore(node.getRNode(), this.getRNode())\r\n        this.getRNode().replaceWith(ef.pivot.getRNode())\r\n      } else {\r\n        this.parentVNode?.getRNode().replaceChild(node.getRNode(), this.getRNode())\r\n      }\r\n    }\r\n    else {\r\n      if (this.parentVNode) {\r\n        let children = Array.from(this.parentVNode.getRNode().children)\r\n        if (children.includes(this.getRNode())) {\r\n          this.parentVNode.getRNode().replaceChild(node.getRNode(), this.getRNode())\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  remove() {\r\n    this.ele?.remove()\r\n  }\r\n\r\n}\r\n\r\n\r\n/**\r\n * 处理原生标签的属性绑定 \r\n*/\r\n\r\nexport function setElementProp(ele: HTMLElement, prop: string, value: string | Record<string, string> | Function) {\r\n  if (typeof value === 'string') {\r\n    if (prop === 'className') { // className比较特殊\r\n      ele.className = value\r\n    } else {\r\n      ele.setAttribute(prop, value)\r\n    }\r\n  } else if (prop === 'style' && typeof value === 'object' && value !== null) { // 对于style标签为对象的值的特殊处理\r\n    let styleStringList = []\r\n    for (let cssattr in value) {\r\n      styleStringList.push(`${cssattr}:${value[cssattr]};`)\r\n    }\r\n    ele.setAttribute(prop, styleStringList.join(''))\r\n  } else if (typeof value === 'function') { // 如果是function则绑定事件\r\n    let pattern = /^on([a-zA-Z]+)/\r\n    if (pattern.test(prop)) {\r\n      let mat = prop.match(pattern)\r\n      mat && ele.addEventListener(mat[1].toLocaleLowerCase(), value.bind(ele))\r\n    } else {\r\n      ele.addEventListener(prop, value.bind(ele))\r\n    }\r\n  }\r\n}\r\n\r\n\r\n","import { ChildVNode, ParentVNode, standardNode } from \"../children\"\r\nimport { VNode } from \"./baseNode\"\r\nimport { ComponentVNode } from \"./component\"\r\nimport { ElementVNode } from \"./element\"\r\nimport { FragmentVNode } from \"./fragment\"\r\nimport { TextVNode } from \"./text\"\r\n\r\n\r\nexport class ArrayVNode extends VNode {\r\n  readonly type: number = 8\r\n  props: Record<any, any>\r\n  // 数组节点中不应该在存在数组\r\n  bnodeList: Array<string | ElementVNode | ComponentVNode | FragmentVNode>\r\n  nodeList: Array<TextVNode | ElementVNode | ComponentVNode | FragmentVNode>\r\n\r\n  fragment?: HTMLElement\r\n  pivot: TextVNode // 锚点\r\n\r\n\r\n  constructor(props: Record<any, any>, bnodeList: Array<string | ElementVNode | ComponentVNode | FragmentVNode>) {\r\n    super()\r\n    this.props = props\r\n    this.bnodeList = bnodeList\r\n    this.nodeList = []\r\n    this.pivot = new TextVNode('')\r\n    this.pivot.createRNode()\r\n  }\r\n\r\n  setParentVNode(parent?: ParentVNode) {\r\n    this.parentVNode = parent\r\n  }\r\n\r\n  getRNode(): HTMLElement {\r\n    return this.fragment!\r\n  }\r\n\r\n  // 创建并初始化真实节点\r\n  createRNode(): void {\r\n    this.fragment = document.createDocumentFragment() as unknown as HTMLElement\r\n    this.bnodeList.forEach(child => {\r\n      let schild = standardNode<false>(child, this.parentVNode, false)\r\n      schild.createRNode()\r\n      this.nodeList.push(schild)\r\n      this.fragment!.appendChild(schild.getRNode())\r\n    })\r\n  }\r\n\r\n  mount() {\r\n    this.parentVNode?.getRNode().appendChild(this.getRNode())\r\n    this.parentVNode?.getRNode().appendChild(this.pivot.getRNode())\r\n  }\r\n\r\n  replaceWith(node: ChildVNode) {\r\n    if (node instanceof ArrayVNode) {\r\n      this.nodeList.forEach(child => child.getRNode().remove())\r\n      this.parentVNode?.getRNode().insertBefore(node.getRNode(), this.pivot.getRNode())\r\n      node.pivot = this.pivot\r\n    }\r\n  }\r\n\r\n  // 移除自身节点的方法\r\n  remove() {\r\n    this.nodeList.forEach(node => node.remove())\r\n  }\r\n\r\n}\r\n\r\n\r\n","import { ComponentVNode, ElementVNode, SlotVNode } from \"./vnode\";\r\nimport { SubComponent } from \"./vnode/type\";\r\nimport { DataProxy } from './proxy'\r\nimport { createNode, SubConstructor } from \"./utils\";\r\nimport { FragmentVNode } from \"./vnode/fragment\";\r\n\r\n/**\r\n * 根组件\r\n*/\r\n\r\ninterface Config {\r\n  data?: {\r\n    [key: string | symbol]: any\r\n  },\r\n}\r\n\r\nexport abstract class Component {\r\n\r\n  // 组件配置\r\n  private config: Config\r\n  // 组件响应式数据\r\n  public data: Record<any, any>\r\n  // 组件属性\r\n  props?: Record<any, any>\r\n  // 组件子元素\r\n  children?: Record<string, SlotVNode>\r\n  // 组件挂载的根虚拟节点\r\n  efVNode?: ElementVNode | FragmentVNode\r\n  // 类组件标识符\r\n  classComponent!: boolean;\r\n\r\n  constructor(config: Config = {}) {\r\n    this.config = config\r\n    // 设置响应式数据对象\r\n    this.data = new DataProxy(this.config.data || {}).getData()\r\n  }\r\n\r\n  setProps(props: {}) {\r\n    this.props = props\r\n  }\r\n\r\n  setChildren(children: Record<string, SlotVNode>) {\r\n    this.children = children\r\n  }\r\n\r\n  abstract render(h: (nodeTag: string | SubConstructor | symbol, props?: Record<any, any>, children?: any[]) => ElementVNode | ComponentVNode | FragmentVNode): ElementVNode | ComponentVNode | FragmentVNode\r\n\r\n  createEFVNode(): ElementVNode | FragmentVNode {\r\n    if (this.efVNode) return this.efVNode\r\n    let renderOut = this.render(createNode)\r\n    if (renderOut instanceof ComponentVNode) {\r\n      // renderOut = renderOut.createComponent().createEFVNode()\r\n      renderOut.createRNode()\r\n      let com = renderOut.getComponent()\r\n      renderOut = com.getEFVNode()\r\n    }\r\n    return this.efVNode = renderOut\r\n  }\r\n\r\n  getEFVNode(): ElementVNode | FragmentVNode {\r\n    return this.efVNode!\r\n  }\r\n}\r\n\r\nComponent.prototype.classComponent = true\r\n\r\n/**\r\n * 解决函数式组件的类\r\n*/\r\nexport class FunComponent extends Component implements SubComponent {\r\n  renderFun?: (props?: Record<any, any>, children?: Record<string, SlotVNode>) => ElementVNode\r\n  setRenderFun(fun: (props?: Record<any, any>, children?: Record<string, SlotVNode>) => ElementVNode) {\r\n    this.renderFun = fun\r\n  }\r\n\r\n  constructor() {\r\n    super()\r\n  }\r\n\r\n  render(): ElementVNode {\r\n    return this.renderFun!.call(this, this.props, this.children)\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import { Component } from './src/component'\r\nimport { defineState, mount, createNode } from './src/utils'\r\nimport { Vact } from './src/application'\r\n\r\nVact.Component = Component\r\n\r\nexport { mount, Component, defineState, createNode }\r\nexport const h = createNode\r\nexport const Fragment = Vact.Fragment\r\nexport default Vact\r\n\r\n"],"names":["EventHandlers","EventEmitter","init","call","this","$getMaxListeners","that","undefined","_maxListeners","defaultMaxListeners","emitNone","handler","isFn","self","len","length","listeners","arrayClone","i","emitOne","arg1","emitTwo","arg2","emitThree","arg3","emitMany","args","apply","_addListener","target","type","listener","prepend","m","events","existing","e","TypeError","_events","newListener","emit","_eventsCount","unshift","push","warned","w","Error","name","emitter","count","console","warn","log","_onceWrap","fired","g","removeListener","arguments","listenerCount","evlistener","arr","copy","Array","prototype","Object","create","usingDomains","domain","active","getPrototypeOf","setMaxListeners","n","isNaN","getMaxListeners","er","doError","error","err","context","domainEmitter","domainThrown","addListener","on","prependListener","once","prependOnceListener","list","position","originalListener","index","k","pop","spliceOne","removeAllListeners","key","keys","ret","unwrapListeners","eventNames","Reflect","ownKeys","PropValue","constructor","value","dataProxy","super","dep","setDep","watcher","valueOf","toString","set","get","notify","forEach","update","Watcher","fn","running","Vact","runTask","DataEventProxy","valueMap","WeakMap","getProp","prop","valueTarget","propValue","isArray","Proxy","receiver","res","getEventProxy","setEventProxy","DataProxy","data","dataProxyValue","depArr","getDepPool","includes","replaceProps","getData","getTarget","State","config","watch","path","props","split","obj","shift","p","setNodeChildren","parentNode","children","standardNodeList","si","child","snode","standardNode","createRNode","mount","propValues","result","getDepProps","SlotVNode","schildren","j","schild","csi","nextNode","replaceNode","setDeps","bindDeps","baseNode","arrIncluded","textNode","TextVNode","setParentVNode","ElementVNode","ComponentVNode","FragmentVNode","ArrayVNode","arrNode","String","newNode","oldNode","replaceWith","VNode","parent","parentVNode","ELEMENT","TEXT","COMPONENT","FRAGMENT","Constructor","setComponentProps","depProps","item","setComponentChildren","slots","getSlot","slotProp","slot","slotName","c","slotChildren","getComponent","component","getRNode","getEFVNode","classComponent","funComponent","FunComponent","setRenderFun","setProps","setChildren","ef","createEFVNode","node","remove","_a","text","document","createTextNode","appendChild","nodeValue","insertBefore","pivot","_b","_c","replaceChild","_d","VNodeChildren","fragment","createDocumentFragment","selector","rootNode","rootEle","ele","querySelector","Component","createNode","nodeTag","Fragment","static","depPool","watcherTask","updating","Promise","resolve","then","callbcak","pool","splice","indexOf","Symbol","tag","setElementProp","createElement","from","className","setAttribute","styleStringList","cssattr","join","pattern","test","mat","match","addEventListener","toLocaleLowerCase","bind","bnodeList","nodeList","efVNode","renderOut","render","com","fun","renderFun","h"],"mappings":"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"}